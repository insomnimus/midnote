{
  "name": "Release",
  "on": {
    "push": {
      "tags": [
        "v*.*.*"
      ]
    }
  },
  "jobs": {
    "build": {
      "strategy": {
        "matrix": {
          "include": [
            {
              "os": "ubuntu-latest",
              "name": "midnote-linux-x64.tar.gz",
              "target": "x86_64-unknown-linux-gnu"
            },
            {
              "os": "macOS-11",
              "name": "midnote-osx-x64.tar.gz",
              "target": "x86_64-apple-darwin"
            },
            {
              "os": "windows-latest",
              "name": "midnote-windows-x64.zip",
              "target": "x86_64-pc-windows-msvc"
            }
          ]
        }
      },
      "runs-on": "${{ matrix.os }}",
      "steps": [
        {
          "name": "Checkout",
          "uses": "actions/checkout@v2"
        },
        {
          "name": "Install Dependencies",
          "if": "matrix.os == 'ubuntu-latest'",
          "env": {
            "DEBIAN_FRONTEND": "noninteractive"
          },
          "run": "sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential pkg-config libasound2-dev"
        },
        {
          "name": "Build",
          "run": "cargo build --target ${{ matrix.target }} --release"
        },
        {
          "name": "Prepare",
          "if": "matrix.os != 'windows-latest'",
          "run": "cd target/${{ matrix.target }}/release\nstrip midnote || true\ntar czvf ../../../${{ matrix.name }} midnote\ncd -\n"
        },
        {
          "if": "matrix.os == 'windows-latest'",
          "name": "Prepare",
          "run": "cd target/${{ matrix.target }}/release\n7z a ../../../${{ matrix.name }} midnote.exe\ncd -\n"
        },
        {
          "name": "Deploy | Upload artifacts",
          "uses": "actions/upload-artifact@v2",
          "with": {
            "name": "${{ matrix.name }}",
            "path": "${{ matrix.name }}"
          }
        }
      ]
    },
    "release": {
      "name": "Create GitHub Release",
      "needs": "build",
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "name": "Setup | Checkout",
          "uses": "actions/checkout@v2.3.4",
          "with": {
            "fetch-depth": 0
          }
        },
        {
          "name": "Setup | Go",
          "uses": "actions/setup-go@v2",
          "with": {
            "go-version": "^1.15.7"
          }
        },
        {
          "name": "Setup | Artifacts",
          "uses": "actions/download-artifact@v2"
        },
        {
          "name": "Setup | Release notes",
          "run": "GO111MODULE=on go install github.com/git-chglog/git-chglog/cmd/git-chglog@0.9.1\ngit-chglog -c .github/chglog/release.yml $(git describe --tags) > RELEASE.md\n"
        },
        {
          "name": "Build | Publish",
          "uses": "softprops/action-gh-release@v1",
          "with": {
            "files": "midnote-*/midnote-*",
            "body_path": "RELEASE.md"
          }
        }
      ]
    }
  }
}
